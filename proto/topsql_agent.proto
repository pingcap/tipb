syntax = "proto3";

package tipb;

option java_multiple_files = true;
option java_package = "com.pingcap.tidb.tipb";

import "gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

// TopSQLAgent is the persistent agent service for TopSQL records
service TopSQLAgent {
    // ReportCPUTimeRecords is called periodically (e.g. per minute) to save the in-memory TopSQL records
    rpc ReportCPUTimeRecords(stream CPUTimeRecord) returns (EmptyResponse) {}
    // ReportSQLMeta reports SQL meta to the agent.
    // The agent should ensure that the SQL meta exists before sending the SQL CPU time records to the remote database.
    rpc ReportSQLMeta(stream SQLMeta) returns (EmptyResponse) {}
    // ReportPlanMeta reports plan meta to the agent.
    // The agent should deal with plan meta similarly to SQL meta.
    rpc ReportPlanMeta(stream PlanMeta) returns (EmptyResponse) {}
}

message CPUTimeRecord {
    bytes sql_digest = 1;
    bytes plan_digest = 2;
    // The following 2 repeated zipped together represents a List<(UnixTimestamp, CPUTime)>
    repeated uint64 record_list_timestamp_sec = 10;  // timestamp in second
    repeated uint32 record_list_cpu_time_ms = 11;  // this value can be greater than 1000 when counting concurrent running SQL queries
}

message SQLMeta {
    bytes sql_digest = 1;
    string normalized_sql = 2;  // SQL string with sensitive fields trimmed, potentially > 1M
    bool is_internal_sql = 3;  // if true, then this sql and plan is internally generated by tidb itself, not user
}

message PlanMeta {
    bytes plan_digest = 1;
    string normalized_plan = 2;  // potentially > 1M
}

message EmptyResponse {}

// TiDB implements TopSQLPubSub service for clients to subscribe to TopSQL data.
service TopSQLPubSub {
    // Clients subscribe to TopSQL data through this RPC, and TiDB periodically (e.g. per minute)
    // publishes TopSQL data to clients via gRPC stream.
    rpc Subscribe(TopSQLSubRequest) returns (stream TopSQLSubResponse) {}
}

message TopSQLSubRequest {}

message TopSQLSubResponse {
    oneof resp_oneof {
        CPUTimeRecord record = 1;
        SQLMeta sql_meta = 2;
        PlanMeta plan_meta = 3;
    }
}
